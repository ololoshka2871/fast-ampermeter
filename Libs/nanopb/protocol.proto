syntax = "proto2";

package ru.sktbelpa.fast_freqmeter;


enum INFO {
    // верися этого протокола
    PROTOCOL_VERSION = 1;

    // идентификатор устройства РЧ24-2.0
    FAST_AMPERMETER_ID = 0xE0F0;

    // ИД, преднозначенный для поиска
    ID_DISCOVER = 0xFFFF;

    MAGICK = 0x09;
}

//------------------------------------------------------------------------------

// Общий запрос: Вызывающий всегда посылает только этот запрос, который содержит
// все возможные данные как необязательные поля.
message Request {
    // Идентификатор запроса. Служит для определения пары запрос/ответ
    required uint32             id = 1;
    // id устройства (идентификация)
    required uint32             deviceID = 2;
    // версия протокола запрашивающего
    required uint32             protocolVersion = 3;

    // -- Добавлено с версии протокола 1 --

    // Зпрос последнего измерения
    optional LastMeasureRequest lastMeasureRequest = 4;

    // Зпрос истории измерений
    optional GetMeasureHistory  getMeasureHistory = 5;
}

//------------------------------------------------------------------------------

// Общий ответ: Устройство всегда отвечает только этим ответом, который содержит
// все возможные данные как необязательные поля.
message Response {
    // Идентификатор запроса, которому соответствует этот ответ
    required uint32             id = 1;
    // id устройства (идентификация)
    required uint32             deviceID = 2;
    // версия протокола
    required uint32             protocolVersion = 3;
    // общий статус выполнения
    required STATUS             Global_status = 4;


    // -- Добавлено с версии протокола 1 --

    // Последнее измерение
    optional SingleMeasure      lastMeasure = 5;

    // Запрошенная история измерений
    optional MeasureHistory     measureHistory = 6;
}

//------------------------------------------------------------------------------

// код выполнения операции
enum STATUS {
    // успешное завершение
    OK = 0;
    // недопустимое значение поля
    ERRORS_IN_SUBCOMMANDS = 1;

    PROTOCOL_ERROR = 100;
}

//-----------------------------------------------------------------------------

// Запрос последнего измеренияя
message LastMeasureRequest {}

// Зпрос истории измерений
message GetMeasureHistory {
    // Начать чтение истории с номера
    optional int64             from = 1;

    // прочитать не более count элементов истории
    optional int32             count = 2;
}

// Измерение
message SingleMeasure {
    // порядковый номер
    required uint64             number = 1;

    // напряжение
    required float              voltage = 2;

    // сила тока
    required float              current = 3;
}

message MeasureHistory {
    // порядковый номер первого самого старого из измерений в истории
    required int64             FirstElementNumber = 1;

    // Элементы истории
    repeated SingleMeasure      HistoryElements = 2;
}
